package ${package.Controller};

import com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.example.result.ResultMessage;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import java.util.Arrays;
import java.util.List;
import ${package.Service}.${table.serviceName};
import ${package.Entity}.${entity};
#if(${restControllerStyle})
#else
#end
#if(${superControllerClassPackage})
import ${superControllerClassPackage};
#end

/**
 * <p>
 * $!{table.comment} 控制器
 * </p>
 *
 * @author ${author}
 * @since ${date}
 */
@Validated
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
#if(${superControllerClass})
@Api(tags = "$!{table.comment}接口")
public class ${table.controllerName} extends ${superControllerClass} {
#else
public class ${table.controllerName} {
#end

    @Autowired
    private ${table.serviceName} ${table.entityPath}Service;

    /**
     * 获取${table.comment}列表
     */
    @GetMapping(value = "/list")
    @ApiOperation("${table.comment}列表")
    public ResultMessage<Page<${entity}>> list(${entity} ${table.entityPath}) {
        Page page = new Page(1,5);
        return ResultMessage.success(${table.entityPath}Service.page(page, new QueryWrapper<>(${table.entityPath})));
    }

    /**
    * 获取所有${table.comment}列表
    */
    @GetMapping(value = "/allList")
    @ApiOperation("所有${table.comment}列表")
    public ResultMessage<List<${entity}>> allList() {
        return ResultMessage.success(${table.entityPath}Service.list());
    }

    /**
     * 新增${table.comment}
     */
    @PostMapping(value = "/add")
    @ApiOperation("新增${table.comment}")
    public ResultMessage<${entity}> add(@RequestBody ${entity} ${table.entityPath}) {
        boolean result = ${table.entityPath}Service.save(${table.entityPath});
        if (result){
            return ResultMessage.success(${table.entityPath});
        }
        return ResultMessage.error();
    }

    /**
     * 删除${table.comment}
     */
    @DeleteMapping(value = "/del")
    @ApiOperation("删除${table.comment}")
    public ResultMessage<String> delById(@RequestParam("id") Long id) {
        boolean result = ${table.entityPath}Service.removeById(id);
        if (result){
            return ResultMessage.success();
        }
        return ResultMessage.error();
    }

    /**
     * "批量删除${table.comment}"
     */
    @ResponseBody
    @DeleteMapping(value = "/delete")
    @ApiOperation("批量删除${table.comment}")
    public ResultMessage<Object> delByIds(String ids) {
        List idList = Arrays.asList(ids.split(","));
        return ${table.entityPath}Service.removeByIds(idList) ? ResultMessage.success(ResultMessage.OK, "删除成功") :
        ResultMessage.error(ResultMessage.FAIL, "删除失败");
    }

    /**
     * 修改${table.comment}
     */
    @PostMapping(value = "/update")
    @ApiOperation("修改${table.comment}")
    public ResultMessage<String> update(@RequestBody ${entity} ${table.entityPath}) {
        boolean result = ${table.entityPath}Service.updateById(${table.entityPath});
        if (result){
            return ResultMessage.success();
        }
        return ResultMessage.error();
    }

    /**
     * 获取${table.comment}
     */
    @GetMapping(value = "/get")
    @ApiOperation("查看${table.comment}")
    public ResultMessage<${entity}> get(@RequestParam("id") Long id) {
        return ResultMessage.success(${table.entityPath}Service.getById(id));
    }

}

#end